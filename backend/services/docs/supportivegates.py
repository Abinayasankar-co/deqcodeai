gates_data = [
  {"name": "Measure", "valueRepresentation": "Measure"},
  {"name": "|0⟩⟨0|", "valueRepresentation": "|0⟩⟨0|"},
  {"name": "|1⟩⟨1|", "valueRepresentation": "|1⟩⟨1|"},
  {"name": "◦", "valueRepresentation": "◦"},
  {"name": "Density", "valueRepresentation": "Density"},
  {"name": "Density3", "valueRepresentation": "Density3"},
  {"name": "Bloch", "valueRepresentation": "Bloch"},
  {"name": "Chance", "valueRepresentation": "Chance"},
  {"name": "Amps2", "valueRepresentation": "Amps2"},
  {"name": "Z", "valueRepresentation": "Z"},
  {"name": "Y", "valueRepresentation": "Y"},
  {"name": "X", "valueRepresentation": "X"},
  {"name": "inputA4", "valueRepresentation": "inputA4"},
  {"name": "Z^-½", "valueRepresentation": "Z^-½"},
  {"name": "Z^½", "valueRepresentation": "Z^½"},
  {"name": "X^½", "valueRepresentation": "X^½"},
  {"name": "Y^½", "valueRepresentation": "Y^½"},
  {"name": "Y^-½", "valueRepresentation": "Y^-½"},
  {"name": "X^-½", "valueRepresentation": "X^-½"},
  {"name": "Z^¼", "valueRepresentation": "Z^¼"},
  {"name": "Y^¼", "valueRepresentation": "Y^¼"},
  {"name": "X^¼", "valueRepresentation": "X^¼"},
  {"name": "Z^-¼", "valueRepresentation": "Z^-¼"},
  {"name": "Y^-¼", "valueRepresentation": "Y^-¼"},
  {"name": "X^-¼", "valueRepresentation": "X^-¼"},
  {"name": "Z^t", "valueRepresentation": "Z^t"},
  {"name": "Y^t", "valueRepresentation": "Y^t"},
  {"name": "X^t", "valueRepresentation": "X^t"},
  {"name": "Z^-t", "valueRepresentation": "Z^-t"},
  {"name": "Y^-t", "valueRepresentation": "Y^-t"},
  {"name": "X^-t", "valueRepresentation": "X^-t"},
  {"name": "Z^ft", "valueRepresentation": "Z^ft"},
  {"name": "Y^ft", "valueRepresentation": "Y^ft"},
  {"name": "X^ft", "valueRepresentation": "X^ft"},
  {"name": "Rzft", "valueRepresentation": "Rzft"},
  {"name": "Ryft", "valueRepresentation": "Ryft"},
  {"name": "Rxft", "valueRepresentation": "Rxft"},
  {"name": "Z^(A/2^n)", "valueRepresentation": "Z^(A/2^n)"},
  {"name": "Z^(-A/2^n)", "valueRepresentation": "Z^(-A/2^n)"},
  {"name": "Ryft", "valueRepresentation": "Ryft"},
  {"name": "X^ft", "valueRepresentation": "X^ft"},
  {"name": "inputA2", "valueRepresentation": "inputA2"},
  {"name": "inputA3", "valueRepresentation": "inputA3"},
  {"name": "inputB2", "valueRepresentation": "inputB2"},
  {"name": "inputB3", "valueRepresentation": "inputB3"},
  {"name": "inputR2", "valueRepresentation": "inputR2"},
  {"name": "inputR3", "valueRepresentation": "inputR3"},
  {"name": "setR", "valueRepresentation": "setR"},
  {"name": "setB", "valueRepresentation": "setB"},
  {"name": "setA", "valueRepresentation": "setA"},
  {"name": "inc2", "valueRepresentation": "inc2"},
  {"name": "inc3", "valueRepresentation": "inc3"},
  {"name": "+=A2", "valueRepresentation": "+=A2"},
  {"name": "+=AB2", "valueRepresentation": "+=AB2"},
  {"name": "-=AB2", "valueRepresentation": "-=AB2"},
  {"name": "*A2", "valueRepresentation": "*A2"},
  {"name": "/A2", "valueRepresentation": "/A2"},
  {"name": "-=A2", "valueRepresentation": "-=A2"},
  {"name": "^A>B", "valueRepresentation": "^A>B"},
  {"name": "^A<B", "valueRepresentation": "^A<B"},
  {"name": "^A=B", "valueRepresentation": "^A=B"},
  {"name": "incmodR", "valueRepresentation": "incmodR"},
  {"name": "decmodR", "valueRepresentation": "decmodR"},
  {"name": "+AmodR", "valueRepresentation": "+AmodR"},
  {"name": "*BToAmodR", "valueRepresentation": "*BToAmodR"},
  {"name": "*AmodR", "valueRepresentation": "*AmodR"},
  {"name": "NeGate", "valueRepresentation": "NeGate"},
  {"name": "-i", "valueRepresentation": "-i"},
  {"name": "i", "valueRepresentation": "i"},
  {"name": "√-i", "valueRepresentation": "√-i"},
  {"name": "√i", "valueRepresentation": "√i"}
]
gates_avail = ["Measure","|0⟩⟨0|","|1⟩⟨1|","•","◦","Density","Density3","Bloch","Chance","Amps2","Z","Y","X","inputA4","Z^-½","Z^½","X^½","Y^½","Y^-½","X^-½","Z^¼","Y^¼","X^¼","Z^-¼","Y^-¼","X^-¼","Z^t","Y^t","X^t","Z^-t","Y^-t","X^-t","Z^ft","Y^ft","X^ft","Rzft","Ryft","Rxft","Z^(A/2^n)","inputA2","Z^(-A/2^n)","Ryft","X^ft","ZDetector","YDetector","ZDetectControlReset","YDetectControlReset","XDetector","XDetectControlReset","zpar","xpar","ypar","⊕","⊗","⊖","|+⟩⟨+|","|-⟩⟨-|","|/⟩⟨/|","|X⟩⟨X|","QFT2","QFT3","QFT†2","QFT†3","PhaseGradient3","grad^-t2","inputA3","inputB2","inputB3","inputR2","inputR3","setR","setB","setA","inc2","inc3","+=A2","+=AB2","^A!=B","-=AB2","^A>=B","^A=B","*A2","/A2","-=A2","^A>B","^A<B","incmodR2","decmodR2","+AmodR2","*BToAmodR2","…","0","NeGate","-i","i","√-i","√i"]
example_prompt = """{"Parameters":[{"n":3,"p":0.5}],"gates":[{"gate":"H","qubit":0},{"gate":"RX","qubit":0,"angle":"acos(sqrt(p))"},{"gate":"Measure","qubit":0},{"gate":"RY","params":[0.5],"qubit":2},{"gate":"CCX","control_qubit":0,"target_qubit":1},],"explanation":"This circuit generates a random number by applying Hadamard gates, RX gates with a probability p, and measuring the qubits.The CX gate is used to entangle the qubits."}"""
json_structured_ouput = """ {{"Parameters":[{{0:{parameters[0]}1:{parameters[1]}}}],"gates":[0:{gates[0]}1:{gates[1]}],"explanation":"This contains the explanation of the code and circuit"}}"""
class ElementsRequired:
    def supportive_gates():
       return gates_avail
    def check_gate_availability(gate_name: str)-> bool:
        if gate_name in gates_avail: return True
        else : return False 
    def sample_prompt():
        return example_prompt , json_structured_ouput
    